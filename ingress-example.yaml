# Basic Ingress for GKE(NodePort) if we don't want use LoadBalancer

#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  annotations:
#    kubernetes.io/ingress.class: nginx
#  name: basic-ingress
#spec:
#  backend:
#    serviceName: debugkit
#    servicePort: 80
#---
### Ingress dla wielu serwis√≥w pod jednym IP dla kilku domen
###https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting
#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: name-virtual-host-ingress
#spec:
#  rules:
#  - host: foo.bar.com
#    http:
#      paths:
#      - backend:
#          serviceName: service1
#          servicePort: 80
#  - host: bar.foo.com
#    http:
#      paths:
#      - backend:
#          serviceName: service2
#          servicePort: 80
#---
#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: simple-fanout-example
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#  - host: debugkit.local
#    http:
#      paths:
#      - path: /debugkit
#        backend:
#          serviceName: service1
#          servicePort: 80
#      - path: /airflow
#        backend:
#          serviceName: service2
#          servicePort: 8080


### INGRESS POLICY ###
#---
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: allow-all-ingress
#spec:
#  podSelector: {}
#  ingress:
#  - {}
#  policyTypes:
#  - Ingress

#---
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: allow-all-egress
#spec:
#  podSelector: {}
#  egress:
#  - {}
#  policyTypes:
#  - Egress
#---
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: default-allow-all
#spec:
#  podSelector: {}
#  policyTypes:
#  - Ingress
#  - Egress
